; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Wykop2"
#define MyAppShortName "Wykop2"
#define MyAppLCShortName "wykop2"
#define MyAppVersion "1.0"
#define MyAppPublisher "My Company"
#define MyAppURL "http://mycompany.com/"
#define MyAppExeName "run-front.bat"

#define MyAppIcon "favicon.ico"

#define NSSM "nssm-x86.exe"
#define NSSM32 "nssm-x86.exe"
#define NSSM64 "nssm.exe"
#define NODE32 "node-v6.10.3-x86.msi"
#define NODE64 "node-v6.10.3-x64.msi"
#define NODE "node-v6.10.3-x64.msi"
#define MONGODB "mongodb-win32-x86_64.msi"
#define VCREDIST "VC_redist.x64.exe"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{66ED18D7-7AB5-4DA2-8B98-C571040C174D}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#MyAppShortName}
DisableDirPage=no
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=.\build
OutputBaseFilename={#MyAppShortName}Installer
SetupIconFile=.\public\{#MyAppIcon}
Compression=lzma
SolidCompression=yes
ArchitecturesInstallIn64BitMode=x64


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Files]
Source: ".\scripts\run-server.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\scripts\run-front.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\scripts\msie-app-secure.hta"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\bin\{#NODE64}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\bin\{#MONGODB}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\bin\{#NSSM64}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\bin\{#NSSM32}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\bin\{#VCREDIST}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\public\{#MyAppIcon}"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\build\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppIcon}"

[Run]
; postinstall launch
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent runhidden

; Install VCREDIST
Filename: "{app}\{#VCREDIST}"; Check: VCRedistNeedsInstall

; Install Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE}""";

; Install MongoDB
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#MONGODB}""";
Filename: "{pf}\MongoDB\Server\3.4\bin\mongod.exe"; Parameters: "--install --logpath=""{localappdata}\mongodb.log"" --dbpath=""{localappdata}"""; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "start MongoDB"; Flags: runhidden;

; Add Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node In"" program=""{pf64}\nodejs\node.exe"" dir=in action=allow enable=yes"; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node Out"" program=""{pf64}\nodejs\node.exe"" dir=out action=allow enable=yes"; Flags: runhidden;

; Add System Service
Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppShortName} ""{pf64}\nodejs\node.exe"" ""\""{app}\app.js\"" ""8080"""; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "set {#MyAppShortName} AppStdout ""{app}\stdout.log"" "; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "set {#MyAppShortName} AppStderr ""{app}\stderr.log"" "; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "start {#MyAppShortName}"; Flags: runhidden;


[UninstallRun]
; Removes System Service
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppShortName}"; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "remove {#MyAppShortName} confirm"; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppLCShortName}"; Flags: runhidden;

; Remove Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node In"" program=""{pf64}\nodejs\node.exe"""; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node Out"" program=""{pf64}\nodejs\node.exe"""; Flags: runhidden;

; Uninstall Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\{#NODE}""";

; Uninstall MongoDB
Filename: "{pf}\MongoDB\Server\3.4\bin\mongod.exe"; Parameters: "--remove"; Flags: runhidden;
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\{#MONGODB}""";

; Remove all leftovers
Filename: "{sys}\rmdir"; Parameters: "-r ""{app}""";



[Code]
#IFDEF UNICODE
#DEFINE AW "W"
#ELSE
#DEFINE AW "A"
#ENDIF
type
INSTALLSTATE = Longint;
const
INSTALLSTATE_INVALIDARG = -2;  { An invalid parameter was passed to the function. }
INSTALLSTATE_UNKNOWN = -1;     { The product is neither advertised or installed. }
INSTALLSTATE_ADVERTISED = 1;   { The product is advertised but not installed. }
INSTALLSTATE_ABSENT = 2;       { The product is installed for a different user. }
INSTALLSTATE_DEFAULT = 5;      { The product is installed for the current user. }

{ Visual C++ 2015 Redistributable }
VC_2015_REDIST_X64 = '{A1C31BA5-5438-3A07-9EEE-A5FB2D0FDE36}';

function MsiQueryProductState(szProduct: string): INSTALLSTATE;
external 'MsiQueryProductState{#AW}@msi.dll stdcall';

function VCVersionInstalled(const ProductID: string): Boolean;
begin
Result := MsiQueryProductState(ProductID) = INSTALLSTATE_DEFAULT;
end;

function VCRedistNeedsInstall: Boolean;
begin
{ here the Result must be True when you need to install your VCRedist }
{ or False when you don't need to, so now it's upon you how you build }
{ this statement, the following won't install your VC redist only when }
{ the Visual C++ 2010 Redist (x86) and Visual C++ 2010 SP1 Redist(x86) }
{ are installed for the current user }
Result := not (VCVersionInstalled(VC_2015_REDIST_X64) and
VCVersionInstalled(VC_2015_REDIST_X64));
end;
